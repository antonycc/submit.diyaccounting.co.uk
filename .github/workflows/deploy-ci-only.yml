# .github/workflows/deploy-ci-only.yml

name: deploy-ci-only
concurrency: ngrok
run-name: "deploy [${{ github.ref_name }}] to [${{ inputs.environment || 'ci' }}]"

on:
  push:
    branches:
      - main
    paths:
      - 'aws/**'
      - 'src/**'
      - 'public/**'
      - '.github/workflows/deploy-ci-only.yml'
      - '**/pom.xml'
  workflow_dispatch:
    #inputs:
    #    skipDeploy:
    #        description: 'Skip deployment step'
    #        required: false
    #        default: 'true'
    #        type: string

#env:
  #environment: 'ci'
  #skipDeploy: ${{ inputs.skipDeploy || 'true' }}

jobs:

  deploy:
    runs-on: ubuntu-latest
    environment: 'ci'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm test

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::887764105431:role/submit-github-actions-role
          role-chaining: false
          aws-region: eu-west-2
          audience: sts.amazonaws.com
          role-skip-session-tagging: true
          output-credentials: true
          retry-max-attempts: 3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::887764105431:role/submit-deployment-role
          role-chaining: true
          aws-region: eu-west-2
          audience: sts.amazonaws.com
          role-skip-session-tagging: true
          output-credentials: true
          retry-max-attempts: 3

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21
          cache: 'maven'

      - name: package
        id: package
        shell: bash
        run: ./mvnw clean package

      - name: Log built files
        shell: bash
        run: |
          echo "ls -lh target/:"
          ls -lh target/
          echo "du -h target/:"
          du -h target/

      - name: set-jar-path
        id: jar-path
        shell: bash
        run: |
          jarPath=$(mvn help:evaluate --quiet --define expression=project.build.directory --define forceStdout)
          jarFilename=$(mvn help:evaluate --quiet --define expression=project.build.finalName --define forceStdout)
          echo "jarFilepath=${jarPath?}/${jarFilename?}.jar" | tee -a "${GITHUB_OUTPUT?}"

      - name: stacks
        id: stacks
        shell: bash
        run: |
          deploy=$(jq -r '.deployStacks' cdk.json | sed 's/SubmitWebStack-dev/SubmitWebStack-${{ inputs.environment || 'ci' }}/g')
          echo "deploy=${deploy?}" | tee -a "${GITHUB_OUTPUT?}"

      - name: deploy
        id: deploy
        shell: bash
        run: npx dotenv -e .env.ci -- ${{ steps.stacks.outputs.deploy }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          ENV_NAME: 'ci'
          LOG_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}
          LOG_GZIPPED_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}
          CERTIFICATE_ARN: ${{ vars.AWS_CERTIFICATE_ARN }}
          CLOUD_TRAIL_ENABLED: ${{ vars.AWS_CLOUD_TRAIL_ENABLED }}
          X_RAY_ENABLED: ${{ vars.AWS_X_RAY_ENABLED }}
          HOSTED_ZONE_ID: ${{ vars.AWS_HOSTED_ZONE_ID }}
          HOSTED_ZONE_NAME: ${{ vars.AWS_HOSTED_ZONE_NAME }}

  npm-behaviour-test-ci:
    needs:
      - deploy
    name: 'npm behaviour test ci'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - run: npm ci || npm install

      - run: npx playwright install --with-deps

      - run: npx dotenv -e '.env.ci' -- npm run test:behaviour

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-behaviour-ci
          path: behaviour-test-results/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ci
          path: test-results/
          retention-days: 30

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-behaviour-ci
          path: test-reports/
          retention-days: 30
