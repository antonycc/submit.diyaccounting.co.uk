# .github/workflows/slow-tests.yml

name: slow-tests
run-name: 'slow tests [${{ github.ref_name }}] [${{ github.event.head_commit.message }}]'

on:
  push:
    branches:
      - main
    paths:
      - 'public/**'
      - 'tests/client/**'
      - 'aws/**'
      - '.m2/**'
      - 'mvnw'
      - '.mvn'
      - 'src/**'
      - 'tests/**'
      - '**/*.json'
      - '.github/workflows/**'
  workflow_dispatch:
  schedule:
    - cron: '23 * * * *'

jobs:
  npm-test:
    name: 'npm test'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm test

  npm-unit-test:
    name: 'npm unit test with coverage'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports-slow
          path: coverage/
          retention-days: 30

  npm-integration-test:
    name: 'npm integration test with coverage'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run test:integration

  npm-system-test:
    name: 'npm system test with coverage'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run test:system

  npm-client-test:
    name: 'npm client test'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - run: npx playwright install --with-deps

      - run: npm run test:client

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-client-slow
          path: test-results/
          retention-days: 30

  npm-behaviour-test:
    name: 'npm behaviour test'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - run: npx playwright install --with-deps

      - run: npm run test:behaviour

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-behaviour
          path: test-results/
          retention-days: 30

  mvn-test:
    name: 'maven test'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21
          cache: 'maven'

      - name: package
        id: package
        shell: bash
        run: ./mvnw clean test

  mvn-package-cdk-synth:
    name: 'cdk synth from maven package'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21
          cache: 'maven'

      - name: check
        id: check
        run: cat ~/.m2/settings.xml
        if: steps.mvn.outputs.pomXmlExists == 'true'

      #- name: download-dependencies
      #  id: download-dependencies
      #  if: steps.mvn.outputs.pomXmlExists == 'true'
      #  shell: bash
      #  run: ./mvnw --batch-mode --quiet dependency:go-offline > /dev/null 2>&1

      - name: package
        id: package
        if: steps.mvn.outputs.pomXmlExists == 'true'
        shell: bash
        run: ./mvnw clean package

      - name: synth
        id: synth
        if: steps.mvn.outputs.pomXmlExists == 'true'
        shell: bash
        run: npx cdk synth --strict --validation --no-staging --trace
