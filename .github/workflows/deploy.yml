# .github/workflows/deploy.yml

name: deploy
concurrency: ngrok
run-name: "deploy [${{ github.ref_name }}] to [${{ inputs.environment || 'ci' }}]"

# TODO: Run from branch and pull requests to require a deployment

on:
  push:
    branches:
      - main
    paths:
      - 'aws/**'
      - 'src/**'
      - 'public/**'
      - '.github/workflows/deploy.yml'
      - '**/pom.xml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'ci'
        type: choice
        options:
          - ci
          - prod
  schedule:
    - cron: '14 5,11,17,23 * * *'

env:
  environment: ${{ inputs.environment || 'ci' }}

jobs:
  npm-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - name: test
        id: test
        shell: bash
        run: 'npm test'

  npm-behaviour-test-local:
    name: 'npm behaviour test local'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - name: Authenticate ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          npx ngrok config add-authtoken "${NGROK_AUTH_TOKEN?}"

      - run: npx playwright install --with-deps

      - run: npm run test:behaviour
        env:
          HMRC_BASE_URI: ${{ vars.HMRC_BASE_URI }}
          HMRC_REDIRECT_URI: ${{ vars.HMRC_REDIRECT_URI }}
          HMRC_CLIENT_ID: ${{ secrets.HMRC_CLIENT_ID }}
          HMRC_CLIENT_SECRET: ${{ secrets.HMRC_CLIENT_SECRET }}
          PORT: ${{ vars.PORT }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-behaviour-local
          path: behaviour-test-results/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-local
          path: test-results/
          retention-days: 30

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-behaviour-local
          path: test-reports/
          retention-days: 30

  mvn-package-cdk-synth:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci || npm install

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21
          cache: 'maven'

      - name: package
        id: package
        shell: bash
        run: ./mvnw clean package

      - name: synth
        id: synth
        shell: bash
        run: npx cdk synth --strict --validation --no-staging

  deploy:
    needs:
      - npm-test
      - npm-behaviour-test-local
      - mvn-package-cdk-synth
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'ci' }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::887764105431:role/submit-github-actions-role
          role-chaining: false
          aws-region: eu-west-2
          audience: sts.amazonaws.com
          role-skip-session-tagging: true
          output-credentials: true
          retry-max-attempts: 3

      - run: aws sts get-caller-identity --region eu-west-2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::887764105431:role/submit-deployment-role
          role-chaining: true
          aws-region: eu-west-2
          audience: sts.amazonaws.com
          role-skip-session-tagging: true
          output-credentials: true
          retry-max-attempts: 3

      - run: aws s3 ls --region eu-west-2

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21
          cache: 'maven'

      - name: download-dependencies
        id: download-dependencies
        shell: bash
        run: ./mvnw --batch-mode --quiet dependency:go-offline > /dev/null 2>&1

      - name: package
        id: package
        shell: bash
        run: ./mvnw clean package

      - name: Log built files
        shell: bash
        run: |
          echo "ls -lh target/:"
          ls -lh target/
          echo "du -h target/:"
          du -h target/

      - name: set-jar-path
        id: jar-path
        shell: bash
        run: |
          jarPath=$(mvn help:evaluate --quiet --define expression=project.build.directory --define forceStdout)
          jarFilename=$(mvn help:evaluate --quiet --define expression=project.build.finalName --define forceStdout)
          echo "jarFilepath=${jarPath?}/${jarFilename?}.jar" | tee -a "${GITHUB_OUTPUT?}"

      - name: stacks
        id: stacks
        shell: bash
        run: |
          synth=$(jq -r '.synthStacks' cdk.json | sed 's/SubmitWebStack-dev/SubmitWebStack-${{ inputs.environment || 'ci' }}/g')
          deploy=$(jq -r '.deployStacks' cdk.json | sed 's/SubmitWebStack-dev/SubmitWebStack-${{ inputs.environment || 'ci' }}/g')
          echo "deploy=${deploy?}" | tee -a "${GITHUB_OUTPUT?}"
          echo "synth=${synth?}" | tee -a "${GITHUB_OUTPUT?}"

      - name: log environment and repository variables
        shell: bash
        run: |
          echo "GITHUB_ACTOR: ${{ github.actor }}"
          echo "ENV_NAME: ${{ inputs.environment || 'ci' }}"
          echo "USE_EXISTING_HOSTED_ZONE: ${{ vars.USE_EXISTING_HOSTED_ZONE || 'true' }}"
          echo "USE_EXISTING_CERTIFICATE: ${{ vars.USE_EXISTING_CERTIFICATE || 'true' }}"
          echo "CLOUD_TRAIL_ENABLED: ${{ vars.AWS_CLOUD_TRAIL_ENABLED || 'false' }}"
          echo "HOSTED_ZONE_NAME: ${{ vars.AWS_HOSTED_ZONE_NAME }}"
          echo "HOSTED_ZONE_ID: ${{ vars.AWS_HOSTED_ZONE_ID }}"
          echo "CERTIFICATE_ARN: ${{ vars.AWS_CERTIFICATE_ARN }}"
          echo "SUB_DOMAIN_NAME: ${{ vars.SUB_DOMAIN_NAME || 'submit' }}"
          echo "LOG_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}"
          echo "LOG_GZIPPED_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}"

      - name: synth
        id: synth
        shell: bash
        run: ${{ steps.stacks.outputs.synth }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          ENV_NAME: ${{ inputs.environment || 'ci' }}
          USE_EXISTING_HOSTED_ZONE: ${{ vars.USE_EXISTING_HOSTED_ZONE || 'true' }}
          USE_EXISTING_CERTIFICATE: ${{ vars.USE_EXISTING_CERTIFICATE || 'true' }}
          CLOUD_TRAIL_ENABLED: ${{ vars.AWS_CLOUD_TRAIL_ENABLED || 'false' }}
          HOSTED_ZONE_NAME: ${{ vars.AWS_HOSTED_ZONE_NAME }}
          HOSTED_ZONE_ID: ${{ vars.AWS_HOSTED_ZONE_ID }}
          CERTIFICATE_ARN: ${{ vars.AWS_CERTIFICATE_ARN }}
          SUB_DOMAIN_NAME: ${{ vars.SUB_DOMAIN_NAME || 'submit' }}
          LOG_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}
          LOG_GZIPPED_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}

      - name: Log generated stacks
        shell: bash
        run: |
          jq '.' cdk.out/tree.json

      - name: Upload tree.json as artifact
        uses: actions/upload-artifact@v4
        with:
          name: cdk-tree-json
          path: cdk.out/tree.json
          retention-days: 7

      - name: deploy
        id: deploy
        shell: bash
        run: ${{ steps.stacks.outputs.deploy }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          ENV_NAME: ${{ inputs.environment || 'ci' }}
          USE_EXISTING_HOSTED_ZONE: ${{ vars.USE_EXISTING_HOSTED_ZONE || 'true' }}
          USE_EXISTING_CERTIFICATE: ${{ vars.USE_EXISTING_CERTIFICATE || 'true' }}
          CLOUD_TRAIL_ENABLED: ${{ vars.AWS_CLOUD_TRAIL_ENABLED || 'false' }}
          HOSTED_ZONE_NAME: ${{ vars.AWS_HOSTED_ZONE_NAME }}
          HOSTED_ZONE_ID: ${{ vars.AWS_HOSTED_ZONE_ID }}
          CERTIFICATE_ARN: ${{ vars.AWS_CERTIFICATE_ARN }}
          SUB_DOMAIN_NAME: ${{ vars.SUB_DOMAIN_NAME || 'submit' }}
          LOG_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}
          LOG_GZIPPED_S3_OBJECT_EVENT_HANDLER_SOURCE: ${{ steps.jar-path.outputs.jarFilepath }}

  # TODO: Run behaviour tests targeting the ci environment
  npm-behaviour-test-ci:
    needs:
      - npm-test
      - npm-behaviour-test-local
      - mvn-package-cdk-synth
      - deploy
    name: 'npm behaviour test ci'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci || npm install

      - name: Authenticate ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          npx ngrok config add-authtoken "${NGROK_AUTH_TOKEN?}"

      - run: npx playwright install --with-deps

      - run: npm run test:behaviour
        env:
          HMRC_BASE_URI: ${{ vars.HMRC_BASE_URI }}
          HMRC_REDIRECT_URI: ${{ vars.HMRC_REDIRECT_URI }}
          HMRC_CLIENT_ID: ${{ secrets.HMRC_CLIENT_ID }}
          HMRC_CLIENT_SECRET: ${{ secrets.HMRC_CLIENT_SECRET }}
          PORT: ${{ vars.PORT }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-behaviour-ci
          path: behaviour-test-results/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ci
          path: test-results/
          retention-days: 30

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-behaviour-ci
          path: test-reports/
          retention-days: 30

