# .github/workflows/build-base-image.yml
# Reusable workflow for building the base Docker image
# This eliminates duplicate builds across different jobs and pipelines

name: build-base-image

on:
  workflow_call:
    outputs:
      base-image-tag:
        description: "The tag of the built base image"
        value: ${{ jobs.build-base-image.outputs.base-image-tag }}
      image-exists:
        description: "Whether the image was built or already exists"
        value: ${{ jobs.build-base-image.outputs.image-exists }}

jobs:
  build-base-image:
    runs-on: ubuntu-latest
    outputs:
      base-image-tag: ${{ steps.build.outputs.base-image-tag }}
      image-exists: ${{ steps.check.outputs.image-exists }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest
      
      - name: Check if image already exists
        id: check
        run: |
          BASE_IMAGE_TAG="submit-base:${{ github.sha }}"
          echo "base-image-tag=$BASE_IMAGE_TAG" >> $GITHUB_OUTPUT
          
          # Check if image exists in cache - if it does, we can skip the build
          if docker buildx imagetools inspect $BASE_IMAGE_TAG 2>/dev/null; then
            echo "image-exists=true" >> $GITHUB_OUTPUT
            echo "Image $BASE_IMAGE_TAG already exists, skipping build"
          else
            echo "image-exists=false" >> $GITHUB_OUTPUT
            echo "Image $BASE_IMAGE_TAG does not exist, will build"
          fi
      
      - name: Build base image
        id: build
        if: steps.check.outputs.image-exists == 'false'
        run: |
          BASE_IMAGE_TAG="submit-base:${{ github.sha }}"
          
          echo "Building base image with tag: $BASE_IMAGE_TAG"
          
          # Build the base image using optimized caching
          docker buildx build \
            --load \
            --cache-from type=gha,scope=base-${{ github.sha }} \
            --cache-from type=gha,scope=base-main \
            --cache-to type=gha,mode=max,scope=base-${{ github.sha }} \
            -t $BASE_IMAGE_TAG \
            -f Dockerfile .
          
          echo "base-image-tag=$BASE_IMAGE_TAG" >> $GITHUB_OUTPUT
          
          # Verify the image was built successfully
          docker images | grep submit-base || echo "Warning: Base image not found in local registry"
          
          # Export image info for debugging
          docker inspect $BASE_IMAGE_TAG | jq '.[0].Config.Labels // {}' || echo "No labels found"
      
      - name: Use existing image
        if: steps.check.outputs.image-exists == 'true'
        run: |
          BASE_IMAGE_TAG="submit-base:${{ github.sha }}"
          echo "Using existing image: $BASE_IMAGE_TAG"
          echo "base-image-tag=$BASE_IMAGE_TAG" >> $GITHUB_OUTPUT