# .github/workflows/publish.yml

name: publish
concurrency: write
run-name: 'publish packages [${{ github.ref_name }}] [${{ github.event.head_commit.message }}]'

on:
  workflow_dispatch:
    inputs:
      versionIncrement:
        description: 'Select the Semantic Versioning segment to increment'
        required: true
        default: 'prerelease'
        type: choice
        options:
          - prerelease
          - patch
          - minor
          - major
          - premajor
          - preminor
          - prepatch
  schedule:
    - cron: '14 6 9 * *'

jobs:
  npm-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - run: npm ci || npm install

      - name: test
        id: test
        shell: bash
        run: 'npm test'

  mvn-package-cdk-synth:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - run: npm ci || npm install

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: 21
          cache: 'maven'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:latest

      - name: download-dependencies
        id: download-dependencies
        shell: bash
        run: ./mvnw --batch-mode --quiet dependency:go-offline > /dev/null 2>&1

      - name: package
        id: package
        shell: bash
        run: ./mvnw clean package

      - name: synth
        id: synth
        shell: bash
        run: npx cdk synth --strict --validation --no-staging

  publish-npm:
    needs:
      - npm-test
      - mvn-package-cdk-synth
    permissions:
      contents: write
      packages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-npm-publish.yml@6.10.2'
    with:
      npmAuthOrganisation: '@${{ github.repository_owner }}'
      versionIncrement: ${{ inputs.versionIncrement || 'prerelease' }}
      buildScript: 'npm run build'
      releaseNotes: 'Release increment: ${{ inputs.versionIncrement }}.'
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'
    secrets:
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

  publish-mvn:
    needs:
      - npm-test
      - publish-npm
      - mvn-package-cdk-synth
    if: needs.mvn-package-cdk-synth.outputs.pomXmlExists == 'true'
    permissions:
      contents: write
      packages: write
    uses: 'xn-intenton-z2a/agentic-lib/.github/workflows/wfr-mvn-publish.yml@6.10.2'
    with:
      versionIncrement: ${{ inputs.versionIncrement || 'prerelease' }}
      releaseVersionOverride: ${{ needs.publish-npm.outputs.releasedVersion }}
      newVersionOverride: ${{ needs.publish-npm.outputs.newVersion }}
      githubRelease: false
      mavenBuildScript: './mvnw --batch-mode clean install'
      mavenDeployScript: './mvnw --batch-mode deploy'
      releaseNotes: 'Release increment: ${{ inputs.versionIncrement }}.'
      gitUserEmail: 'action@github.com'
      gitUserName: 'GitHub Actions[bot]'

  update-cdk-version:
    needs:
      - npm-test
      - publish-npm
      - mvn-package-cdk-synth
      - publish-mvn
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes
        shell: bash
        run: |
          # Pull latest changes to account for commits from other jobs
          # Retry up to 3 times in case of temporary conflicts
          for i in {1..3}; do
            if git pull origin ${{ github.ref_name }}; then
              echo "Successfully pulled latest changes"
              break
            else
              echo "Pull attempt $i failed, retrying in 5 seconds..."
              sleep 5
              if [ $i -eq 3 ]; then
                echo "Failed to pull after 3 attempts"
                exit 1
              fi
            fi
          done

      - name: Update cdk.json version references
        shell: bash
        run: |
          # Replace web-<some version>.jar with web-<newVersion>.jar in cdk.json
          sed -i 's/web-.*\.jar/web-${{ needs.publish-npm.outputs.newVersion }}.jar/g' cdk.json

      - name: Commit version updates
        shell: bash
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions[bot]"
          git add cdk.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "${{ needs.publish-npm.outputs.newVersion }}"

            # Retry push up to 3 times in case of conflicts
            for i in {1..3}; do
              if git push; then
                echo "Successfully pushed changes"
                break
              else
                echo "Push attempt $i failed, pulling latest changes and retrying..."
                git pull origin ${{ github.ref_name }}
                if [ $i -eq 3 ]; then
                  echo "Failed to push after 3 attempts"
                  exit 1
                fi
                sleep 2
              fi
            done
          fi
