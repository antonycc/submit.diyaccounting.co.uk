name: test
run-name: "test from ${{ github.ref_name }}"

on:
  workflow_dispatch:
    inputs:
      environment-name:
        type: choice
        description: 'Environment name to use instead of computing from branch, e.g. ci or prod'
        required: false
        options:
          - ''
          - 'ci'
          - 'prod'
        default: ''
      deployment-name:
        type: string
        description: 'Deployment name to use instead of computing from branch, e.g. ci-lambdas6 or prod-ea373de'
        required: false
        default: ''
  workflow_call:
    inputs:
      environment-name:
        type: string
        description: 'Environment name to use instead of computing from branch, e.g. ci or prod'
        required: true
      deployment-name:
        type: string
        description: 'Deployment name to use instead of computing from branch, e.g. ci-lambdas6 or prod-ea373de'
        required: true

  push:
    branches:
      - '**'
      - '!gh_pages'
    paths:
      - 'app/**'
      - 'infra/**'
      - 'tests/**'
      - 'web/**'
      - '.env.ci'
      - '.env.prod'
      - '**/cdk.json'
      - 'Dockerfile'
      - 'LICENSE'
      - 'package.json'
      - 'package-lock.json'
      - 'pom.xml'
      - 'product-catalogue.toml'
      - '.github/actions/get-names'
      - '.github/workflows/test.yml'
      - '.prettierignore'
      - '.prettierrc'
      - 'eslint.config.js'
      - 'jsconfig.json'
      - 'mock-oauth2-config.json'
      - 'playwright.config.js'
      - 'vitest.config.js'
  schedule:
    - cron: '23 4 * * *'

permissions:
  contents: read
  packages: read
  id-token: write

env:
  JAVA_VERSION: '21'
  NODE_VERSION: '22'
  ACTIONS_ROLE_ARN: 'arn:aws:iam::887764105431:role/submit-github-actions-role'
  DEPLOY_ROLE_ARN:  'arn:aws:iam::887764105431:role/submit-deployment-role'
  AWS_REGION: 'eu-west-2'
  AWS_ACCOUNT_ID: '887764105431'
  AWS_HOSTED_ZONE_ID: 'Z0315522208PWZSSBI9AL'
  BASE_IMAGE_TAG_PREFIX: 'submit-base'
  loadTestDuration: ${{ inputs.loadTestDuration || '30s' }}
  GITHUB_ACTOR: ${{ github.actor }}
  SELF_DESTRUCT_DELAY_HOURS: ${{ inputs.selfDestructDelayHours || '1' }}
  BASE_IMAGE_TAG: ${{ github.sha }}
  FORCE_ALL_STACK_DEPLOYMENT: ${{ inputs.forceAllStackDeployment || 'false' }}
  COMMIT_HASH: ${{ github.sha }}
  BUILD_NUMBER: ${{ github.run_number }}
  GITHUB_REF: ${{ github.ref }}
  GITHUB_REF_TO_ENV: ${{ github.ref == 'refs/heads/main' && 'prod' || 'ci' }}

jobs:

  names:
    runs-on: ubuntu-24.04
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'ci' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Compute deployment name and environment
        id: deployment-config
        uses: ./.github/actions/get-names
        with:
          environment-name: ${{ github.event.inputs.environment-name || '' }}
          deployment-name: ${{ github.event.inputs.deployment-name || '' }}
    outputs:
      environment-name: ${{ steps.deployment-config.outputs.environment-name }}
      deployment-name: ${{ steps.deployment-config.outputs.deployment-name }}
      base-domain: ${{ steps.deployment-config.outputs.base-domain }}
      base-url:      ${{ steps.deployment-config.outputs.base-url }}
      apex-domain: ${{ steps.deployment-config.outputs.apex-domain }}
      apex-url: ${{ steps.deployment-config.outputs.apex-url }}
      holding-domain: ${{ steps.deployment-config.outputs.holding-domain }}
      holding-url: ${{ steps.deployment-config.outputs.holding-url }}

  npm-test:
    name: 'npm test'
    runs-on: ubuntu-24.04
    needs:
      - names
    permissions:
      contents: read
      packages: read
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm test

  npm-unit-test:
    name: 'npm unit test'
    runs-on: ubuntu-latest
    needs:
      - names
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run test:coverage

  npm-integration-test:
    name: 'npm integration test'
    runs-on: ubuntu-latest
    needs:
      - names
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run test:integration

  npm-system-test:
    name: 'npm system test'
    runs-on: ubuntu-latest
    needs:
      - names
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run test:system

  npm-test-web-unit:
    name: 'npm unit test with coverage'
    runs-on: ubuntu-latest
    needs:
      - names
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci || npm install

      - run: npm run test:web-unit

  npm-browser-test:
    name: 'npm browser test'
    runs-on: ubuntu-latest
    needs:
      - names
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - run: npm ci

      - run: npx playwright install chromium --with-deps

      - run: npm run test:browser

  mvn-test:
    name: 'maven test'
    runs-on: ubuntu-latest
    needs:
      - names
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v5

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: package
        id: package
        shell: bash
        run: |
          ./mvnw clean package

  npm-test-cdk-ci:
    name: 'npm test cdk-ci'
    needs:
      - names
    runs-on: ubuntu-24.04
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'ci' }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Node dependencies
        run: npm ci

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: package
        id: mvn-package
        shell: bash
        run: |
          ./mvnw clean package -DskipTests -Dmaven.compiler.source=${{ env.JAVA_VERSION }} -Dmaven.compiler.target=${{ env.JAVA_VERSION }}
          echo "SELF_DESTRUCT_HANDLER_SOURCE=target/self-destruct-lambda.jar"
          echo "SELF_DESTRUCT_HANDLER_SOURCE=target/self-destruct-lambda.jar" >> $GITHUB_OUTPUT
          ls -l target/self-destruct-lambda.jar

      - name: Self Destruct Start Datetime (ISO 8601) now plus SELF_DESTRUCT_DELAY_HOURS
        id: self-destruct-start
        shell: bash
        run: |
          SELF_DESTRUCT_START_DATETIME=$(date -u -d "+${{ env.SELF_DESTRUCT_DELAY_HOURS }} hours" +"%Y-%m-%dT%H:%M:%SZ")
          echo "SELF_DESTRUCT_START_DATETIME=$SELF_DESTRUCT_START_DATETIME"
          echo "SELF_DESTRUCT_START_DATETIME=$SELF_DESTRUCT_START_DATETIME" >> $GITHUB_OUTPUT

      - name: test cdk
        id: test-cdk
        shell: bash
        run: npm run cdk-ci
        env:
          ENVIRONMENT_NAME: 'ci'
          DEPLOYMENT_NAME: 'ci'
          SELF_DESTRUCT_HANDLER_SOURCE: "../${{ steps.mvn-package.outputs.SELF_DESTRUCT_HANDLER_SOURCE }}"
          SELF_DESTRUCT_START_DATETIME: ${{ steps.self-destruct-start.outputs.SELF_DESTRUCT_START_DATETIME }}
          # Set by deploy-environment.yml after the environment's AuthStack is deployed
          COGNITO_USER_POOL_ARN: ${{ vars.COGNITO_USER_POOL_ARN }}
          COGNITO_CLIENT_ID: ${{ vars.COGNITO_CLIENT_ID }}

  npm-test-cdk-prod:
    name: 'npm test cdk prod'
    needs:
      - names
    runs-on: ubuntu-24.04
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'ci' }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Node dependencies
        run: npm ci

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: package
        id: mvn-package
        shell: bash
        run: |
          ./mvnw clean package -DskipTests -Dmaven.compiler.source=${{ env.JAVA_VERSION }} -Dmaven.compiler.target=${{ env.JAVA_VERSION }}
          echo "SELF_DESTRUCT_HANDLER_SOURCE=target/self-destruct-lambda.jar"
          echo "SELF_DESTRUCT_HANDLER_SOURCE=target/self-destruct-lambda.jar" >> $GITHUB_OUTPUT
          ls -l target/self-destruct-lambda.jar

      - name: Self Destruct Start Datetime (ISO 8601) now plus SELF_DESTRUCT_DELAY_HOURS
        id: self-destruct-start
        shell: bash
        run: |
          SELF_DESTRUCT_START_DATETIME=$(date -u -d "+${{ env.SELF_DESTRUCT_DELAY_HOURS }} hours" +"%Y-%m-%dT%H:%M:%SZ")
          echo "SELF_DESTRUCT_START_DATETIME=$SELF_DESTRUCT_START_DATETIME"
          echo "SELF_DESTRUCT_START_DATETIME=$SELF_DESTRUCT_START_DATETIME" >> $GITHUB_OUTPUT

      - name: test cdk
        id: test-cdk
        shell: bash
        run: npm run cdk
        env:
          ENVIRONMENT_NAME: 'prod'
          DEPLOYMENT_NAME: 'prod'
          SELF_DESTRUCT_HANDLER_SOURCE: "../${{ steps.mvn-package.outputs.SELF_DESTRUCT_HANDLER_SOURCE }}"
          SELF_DESTRUCT_START_DATETIME: ${{ steps.self-destruct-start.outputs.SELF_DESTRUCT_START_DATETIME }}
          # Set by deploy-environment.yml after the environment's AuthStack is deployed
          COGNITO_USER_POOL_ARN: ${{ vars.COGNITO_USER_POOL_ARN }}
          COGNITO_CLIENT_ID: ${{ vars.COGNITO_CLIENT_ID }}
