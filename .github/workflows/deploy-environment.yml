name: deploy environment (ApexStack)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options: [prod, ci, qa, dev]
        default: ci

jobs:
  names:
    name: names
    env: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-24.04
    outputs:
      environment-name: ${{ steps.out.outputs.environment_name }}
    steps:
      - id: out
        run: |
          echo "environment_name=${{ github.event.inputs.environment }}" >> "$GITHUB_OUTPUT"

  deploy-apex:
    name: deploy apex
    needs:
      - names
    runs-on: ubuntu-24.04
    # bind to a GitHub Environment so you can use env-specific vars/secrets
    environment: ${{ needs.names.outputs.environment-name }}
    permissions:
      id-token: write   # for OIDC
      contents: read
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ vars.JAVA_VERSION || '21' }}
          cache: maven

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ vars.NODE_VERSION || '22' }}
          cache: 'npm'

      - run: npm ci

      - name: Build CDK app
        run: ./mvnw --errors -DskipTests package

      - name: Configure AWS role via GitHub OIDC
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ vars.DEPLOY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION || 'us-east-1' }}

      - name: Deploy ApexStack
        run: |
          ./cdk-environment \
          && npx cdk deploy \
            ${{ needs.names.outputs.environment-name }}-ApexStack \
            --require-approval never \
            --ci true \
            --concurrency 4 \
            --asset-parallelism
