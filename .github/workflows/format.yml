# .github/workflows/format.yml

name: format
concurrency:
  group: 'auto-format-lint-${{ github.ref_name }}'
  cancel-in-progress: true
run-name: >
  Auto Format and Lint [${{ github.ref_name }}]
  [${{ github.event.head_commit.message }}]

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Run in dry-run mode (no changes made)'
        required: false
        default: false
        type: boolean
      target_branch:
        description: 'Target branch to create PR against'
        required: false
        default: 'main'
        type: string
  schedule:
    # Run nightly at 4:07 AM UTC (optimal time for GitHub Actions)
    - cron: '7 4 * * *'

jobs:
  auto-format-lint:
    name: 'Auto Format and Lint'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Install Node.js dependencies
        run: npm ci || npm install --ignore-engines

      - name: Check current state
        run: |
          echo "Checking current formatting and linting state..."
          echo "::group::Prettier Check"
          npm run formatting:js || echo "Prettier issues found"
          echo "::endgroup::"

          echo "::group::Java Formatting Check"
          npm run formatting:java || echo "Java formatting issues found"
          echo "::endgroup::"

          echo "::group::ESLint Check"
          npm run linting || echo "ESLint issues found"
          echo "::endgroup::"

      - name: Apply formatting fixes
        run: |
          echo "Applying formatting fixes..."

          echo "::group::Prettier Fix"
          npm run formatting:js-fix || echo "Prettier fix completed"
          echo "::endgroup::"

          echo "::group::Java Formatting Fix"
          npm run formatting:java-fix || echo "Java formatting fix completed"
          echo "::endgroup::"

      - name: Apply linting fixes
        run: |
          echo "Applying ESLint auto-fixes..."
          npm run linting-fix || echo "ESLint auto-fix completed"

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
            echo "::group::Changes Summary"
            git diff --stat
            echo "::endgroup::"
          fi

      - name: Create feature branch and PR
        if: steps.changes.outputs.has_changes == 'true' && inputs.dry_run != true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Create feature branch
          BRANCH_NAME="auto-format-lint/$(date +%Y%m%d_%H%M%S)"
          git checkout -b "$BRANCH_NAME"
          echo "Created branch: $BRANCH_NAME"

          # Commit changes
          git add .
          git commit -m "Auto-format and lint fixes $(date +%Y-%m-%d)

          Co-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"

          # Push changes
          git push origin "$BRANCH_NAME"

          # Create PR using GitHub CLI
          gh pr create \
            --title "Auto-format and lint fixes $(date +%Y-%m-%d)" \
            --body "This PR was automatically created by the Auto Format and Lint workflow.

          Changes include:
          - JavaScript/TypeScript formatting fixes via Prettier
          - Java formatting fixes via Spotless  
          - ESLint auto-fixes for JavaScript/TypeScript

          Please review and merge if the changes look good." \
            --base "${{ inputs.target_branch || 'main' }}" \
            --head "$BRANCH_NAME" \
            --label "automated,formatting,linting" \
            --assignee "${{ github.actor }}"

      - name: Dry run summary
        if: inputs.dry_run == true
        run: |
          echo "::notice::DRY RUN MODE - No changes were committed or pushed"
          echo "::group::Summary"
          echo "Would have made changes: ${{ steps.changes.outputs.has_changes }}"
          if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
            echo "Changes that would be committed:"
            git diff --stat
          fi
          echo "::endgroup::"

      - name: No changes summary
        if: steps.changes.outputs.has_changes == 'false'
        run: |
          echo "::notice::No changes detected - skipping PR creation"
